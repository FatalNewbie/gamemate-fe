# 서버 블록 시작: 이 줄은 새로운 서버 블록을 정의하는 시작 부분입니다. 
# 이 블록 안에는 해당 서버에 대한 설정이 포함됩니다.
server {
    # 포트 설정: Nginx가 HTTP 요청을 수신할 포트를 설정합니다. 
    # 여기서는 80번 포트를 사용하므로, 일반적인 HTTP 트래픽을 처리합니다.
    listen 80;
    # 서버 이름: 이 설정은 서버가 응답할 도메인 이름을 지정합니다.
    server_name ec2-54-82-46-230.compute-1.amazonaws.com;
# 루트 위치 블록: 이 줄은 요청 URL이 /로 시작하는 모든 요청에 대한 설정을 정의합니다. 
# 즉, 웹사이트의 루트 경로에 대한 요청을 처리합니다.
    location / {
        # 루트 디렉토리 설정: Nginx가 정적 파일을 찾을 기본 디렉토리를 설정합니다. 
        # 여기서는 /usr/share/nginx/html이 설정되어 있으며, 이 디렉토리에서 HTML 파일과 기타 정적 파일을 서빙합니다.
        root /usr/share/nginx/html;
        # 인덱스 파일 설정: 요청된 디렉토리에 인덱스 파일이 있을 경우, 기본적으로 사용할 파일을 지정합니다. 
        # 여기서는 index.html 또는 index.htm 파일이 요청될 경우 자동으로 사용됩니다.
        index index.html index.htm;
        # 파일 존재 여부 확인 및 대체: 요청된 URI ($uri)에 해당하는 파일이 존재하면 그 파일을 서빙하고, 존재하지 않을 경우 /index.html을 반환합니다. 
        # 이는 싱글 페이지 애플리케이션(SPA)에서 클라이언트 측 라우팅을 지원하기 위해 사용됩니다. 
        # 즉, 사용자가 페이지를 새로 고침할 때 404 오류를 피할 수 있습니다.
        try_files $uri /index.html;  # SPA를 위한 설정
    }

    # 404 오류 페이지 설정: 요청한 페이지가 존재하지 않을 경우, Nginx가 반환할 404 오류 페이지를 설정합니다. 여기서는 /404.html 파일로 지정되어 있습니다.
    error_page 404 /404.html;
    # 404 페이지 전용 블록: /404.html에 대한 요청을 처리하는 설정을 정의합니다. 이 블록은 특정 경로에 대한 설정을 다룹니다.
    location = /404.html {
        # 내부 요청 처리: 이 설정은 /404.html이 외부 요청에 의해 직접 접근되지 않도록 합니다. 
        # 즉, 클라이언트가 직접 /404.html에 요청을 보내는 것을 허용하지 않고, 오직 Nginx가 404 오류 발생 시 내부적으로만 이 페이지를 반환할 수 있도록 합니다.
        internal;
    }
}